/**
 * Breakpoints mixins
 */
 @mixin breakpoint($device, $type: min) {
    @if map_has_key($breakpoints, $device) {
      $width: map_get($breakpoints, $device);

      @if $type == max {
        $width: $width - 1px;
      }
      @media only screen and (#{$type}-width: $width) {
        @content;
      }
    }
}
@mixin breakpoint-between($deviceMin, $deviceMax) {
    $mediaQuery: "";

    @if map-has-key($breakpoints, $deviceMin) {
        $mediaQuery: $mediaQuery + "(min-width: #{map-get($breakpoints, $deviceMin)})";
        //@debug "1st if: #{$mediaQuery}";
    }
    @if map-has-key($breakpoints, $deviceMax) {

        @if $mediaQuery != "" {
            $mediaQuery: $mediaQuery + " and ";
        }
        $mediaQuery: $mediaQuery + "(max-width: #{map-get($breakpoints, $deviceMax) - 1px})";
        //@debug "2nd if: #{$mediaQuery}";
    }
    @media #{$mediaQuery} {
        @content;
    }
}

@mixin icon() {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'icomoon' !important;
  speak: never;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;

  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/**
 * Hide content visually while keeping it accessible to assistive technologies
 *
 * See: https://www.a11yproject.com/posts/2013-01-11-how-to-hide-content/
 * See: https://hugogiraudel.com/2016/10/13/css-hide-and-seek/
 */
@mixin visually-hidden() {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px; // Fix for https://github.com/twbs/bootstrap/issues/25686
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/*
 * Use to only display content when it's focused, or one of its child elements is focused
 * (i.e. when focus is within the element/container that the class was applied to)
 *
 * Useful for "Skip to main content" links; see https://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1
 */
@mixin visually-hidden-focusable() {
  &:not(:focus):not(:focus-within) {
    @include visually-hidden();
  }
}

/**
 * Applies specific style if total number of found elements is superior/equal/less than $number
 */
@mixin quantity-query($number, $comparison: 'equal') {
  $nth: '';
  @if index(('greater' 'more' '>'), $comparison) {
    $nth: 'n + #{$number}';
  } @else if index(('less' 'fewer' '<'), $comparison) {
    $nth: '-n + #{$number}';
  } @else if index(('equal' 'same' '='), $comparison) {
    $nth: $number;
  } @else {
    @warn "Sorry, thatâ€™s an invalid $comparison value."
  }

  &:nth-last-child(#{$nth}):first-child {
    &,
    & ~ * {
      @content;
    }
  }
}